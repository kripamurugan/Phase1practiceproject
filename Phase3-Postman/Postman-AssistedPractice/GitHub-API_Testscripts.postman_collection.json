{
	"info": {
		"_postman_id": "006a1ba6-4ba8-4291-921d-ee60cdac21db",
		"name": "GitHub-API_Testscripts",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31715007"
	},
	"item": [
		{
			"name": "GetAllRepos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Check if the response status is 200 OK\r",
							"\r",
							"pm.test(\"Status code is 200\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"Response body contains kripamurugan\", function(){\r",
							"    pm.expect(pm.response.text()).include(\"kripamurugan\");\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "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",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.github.com/user/repos",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"user",
						"repos"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetSpecific_Repos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Check if the response status is 200 OK\r",
							"\r",
							"pm.test(\"Status code is 200\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function(){\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type should be application/json\", function(){\r",
							"    pm.response.to.have.header(\"Content-Type\",\"application/json; charset=utf-8\");\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"Response body is valid JSON\", function(){\r",
							"    pm.response.to.be.json;\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"Check specific field existence\", function(){\r",
							"    pm.expect(pm.response.json()).to.have.property(\"id\");\r",
							"    pm.expect(pm.response.json()).to.have.property(\"name\");\r",
							"    pm.expect(pm.response.json()).to.have.property(\"full_name\");\r",
							"    pm.expect(pm.response.json()).to.have.property(\"private\");\r",
							"    pm.expect(pm.response.json()).to.have.property(\"default_branch\");\r",
							"    pm.expect(pm.response.json()).to.have.property(\"watchers\");\r",
							"});\r",
							"\r",
							"//How to fetch json response in variable\r",
							"var resData=JSON.parse(responseBody);\r",
							"console.log(resData.id);\r",
							"console.log(resData.node_id);\r",
							"console.log(resData.name);\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "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",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.github.com/repos/:owner/:repos",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"repos",
						":owner",
						":repos"
					],
					"variable": [
						{
							"key": "owner",
							"value": "kripamurugan"
						},
						{
							"key": "repos",
							"value": "MAD-LAB"
						}
					]
				}
			},
			"response": []
		}
	]
}